# Code generated by shipbuilder init 1.16.6. DO NOT EDIT.

name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  go-build-release:
    name: Go Build
    runs-on: ubuntu-latest
    steps:
      - uses: conventional-actions/setup-netrc@v1
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: version
        name: Determine next version
        uses: conventional-actions/next-version@v1
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - name: Go Version
        uses: conventional-actions/go-version@v1
        with:
          version: ${{steps.version.outputs.version}}
      - name: Go Build
        uses: conventional-actions/go-build@v1
        with:
          platforms: |
            linux/amd64
            linux/arm64
            darwin/amd64
            darwin/arm64
            windows/amd64
      - name: Create release
        uses: conventional-actions/create-release@v1
        with:
          tag_name: ${{steps.version.outputs.version}}
          artifacts: 'bin1_linux_amd64'

  winch:
    name: Winch
    runs-on: ubuntu-latest
    steps:
      - uses: conventional-actions/setup-netrc@v1
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - uses: conventional-actions/winch@v1

  setup-docker-scan:
    name: Setup Docker Scan
    runs-on: ubuntu-latest
    steps:
      - uses: conventional-actions/setup-netrc@v1
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - uses: conventional-actions/setup-docker-scan@v1.1.2
        with:
          token: ${{secrets.SNYK_AUTH_TOKEN}}

  docker-scan:
    name: Docker Scan
    runs-on: ubuntu-latest
    steps:
      - uses: conventional-actions/setup-netrc@v1
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - uses: conventional-actions/docker-scan@v1.1.3
        with:
          token: ${{secrets.SNYK_AUTH_TOKEN}}
          image: winchci/golang
          tag: latest

  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - uses: conventional-actions/go-vet@v1.0.2

  kart:
    name: Kart
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - id: gokart
        uses: conventional-actions/go-kart@v1
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{steps.gokart.outputs.output_path}}

  revive:
    name: Revive
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - id: gorevive
        uses: conventional-actions/go-revive@v0.0.5
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{steps.gorevive.outputs.output_path}}

  staticcheck:
    name: Staticcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - id: staticcheck
        uses: conventional-actions/go-staticcheck@v1.1.1
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{steps.staticcheck.outputs.output_path}}

  gosec:
    name: Gosec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - id: gosec
        uses: conventional-actions/go-sec@v0.0.1
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{steps.gosec.outputs.output_path}}

permissions:
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  SNYK_AUTH_TOKEN: ${{ secrets.SNYK_AUTH_TOKEN }}
